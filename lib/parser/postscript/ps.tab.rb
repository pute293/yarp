#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module PDF
  module Parser
    class PostScriptParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    17,    19,     3,     4,     5,    14,    25,    15,    21,    26,
    24,    16,    20,     6,     7,     8,     9,    29,    22,    10,
    11,     3,     4,     5,    14,   nil,    15,   nil,   nil,   nil,
    16,   nil,     6,     7,     8,     9,   nil,   nil,    10,    11,
     3,     4,     5,    14,   nil,    15,   nil,   nil,   nil,    16,
   nil,     6,     7,     8,     9,   nil,   nil,    10,    11,     3,
     4,     5,    14,   nil,    15,   nil,   nil,   nil,    16,   nil,
     6,     7,     8,     9,   nil,   nil,    10,    11 ]

racc_action_check = [
     1,    14,     1,     1,     1,     1,    20,     1,    15,    22,
    17,     1,    14,     1,     1,     1,     1,    28,    15,     1,
     1,     0,     0,     0,     0,   nil,     0,   nil,   nil,   nil,
     0,   nil,     0,     0,     0,     0,   nil,   nil,     0,     0,
    27,    27,    27,    27,   nil,    27,   nil,   nil,   nil,    27,
   nil,    27,    27,    27,    27,   nil,   nil,    27,    27,    23,
    23,    23,    23,   nil,    23,   nil,   nil,   nil,    23,   nil,
    23,    23,    23,    23,   nil,   nil,    23,    23 ]

racc_action_pointer = [
    19,     0,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    -5,     0,   nil,    10,   nil,   nil,
     0,   nil,     1,    57,   nil,   nil,   nil,    38,     5,   nil ]

racc_action_default = [
   -22,   -22,    -1,    -3,    -4,    -5,    -6,    -7,    -8,    -9,
   -10,   -11,   -12,   -13,   -22,   -22,   -18,   -22,    -2,   -14,
   -22,   -15,   -22,   -20,    30,   -16,   -17,   -21,   -22,   -19 ]

racc_goto_table = [
    18,     1,    28,    23,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    27,   nil,    18 ]

racc_goto_check = [
     2,     1,     5,     6,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     1,   nil,     2 ]

racc_goto_pointer = [
   nil,     1,    -1,   nil,   nil,   -21,   -13 ]

racc_goto_default = [
   nil,   nil,     2,    12,    13,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 22, :_reduce_none,
  2, 22, :_reduce_none,
  1, 23, :_reduce_3,
  1, 23, :_reduce_4,
  1, 23, :_reduce_5,
  1, 23, :_reduce_6,
  1, 23, :_reduce_7,
  1, 23, :_reduce_8,
  1, 23, :_reduce_9,
  1, 23, :_reduce_10,
  1, 23, :_reduce_11,
  1, 23, :_reduce_12,
  1, 23, :_reduce_13,
  2, 24, :_reduce_14,
  2, 24, :_reduce_15,
  3, 24, :_reduce_16,
  3, 24, :_reduce_17,
  0, 27, :_reduce_18,
  4, 25, :_reduce_19,
  0, 26, :_reduce_none,
  1, 26, :_reduce_none ]

racc_reduce_n = 22

racc_shift_n = 30

racc_token_table = {
  false => 0,
  :error => 1,
  :PS_TRUE => 2,
  :PS_FALSE => 3,
  :PS_NULL => 4,
  :PS_STRL_L => 5,
  :PS_STRL_R => 6,
  :PS_STRH_L => 7,
  :PS_STRH_R => 8,
  :PS_ARRAY_L => 9,
  :PS_DICT_L => 10,
  :PS_PROC_START => 11,
  :PS_PROC_END => 12,
  :PS_NAME => 13,
  :PS_IEN => 14,
  :PS_NUM_INT => 15,
  :PS_NUM_REAL => 16,
  :PS_STR_ASCII => 17,
  :PS_STR_HEX => 18,
  :PS_OP => 19,
  :PS_MARK => 20 }

racc_nt_base = 21

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PS_TRUE",
  "PS_FALSE",
  "PS_NULL",
  "PS_STRL_L",
  "PS_STRL_R",
  "PS_STRH_L",
  "PS_STRH_R",
  "PS_ARRAY_L",
  "PS_DICT_L",
  "PS_PROC_START",
  "PS_PROC_END",
  "PS_NAME",
  "PS_IEN",
  "PS_NUM_INT",
  "PS_NUM_REAL",
  "PS_STR_ASCII",
  "PS_STR_HEX",
  "PS_OP",
  "PS_MARK",
  "$start",
  "ps_values",
  "ps_value",
  "ps_str",
  "ps_proc",
  "ps_proc_ops",
  "@1" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'ps.y.rb', 22)
  def _reduce_3(val, _values, result)
     op_push(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 23)
  def _reduce_4(val, _values, result)
     op_push(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 24)
  def _reduce_5(val, _values, result)
     op_push(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 25)
  def _reduce_6(val, _values, result)
     op_push(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 26)
  def _reduce_7(val, _values, result)
     op_push(on_iename(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 27)
  def _reduce_8(val, _values, result)
     op_push(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 28)
  def _reduce_9(val, _values, result)
     op_push(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 29)
  def _reduce_10(val, _values, result)
     on_operation(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 30)
  def _reduce_11(val, _values, result)
     op_push(MARK) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 31)
  def _reduce_12(val, _values, result)
     op_push(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 32)
  def _reduce_13(val, _values, result)
     op_push(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 33)
  def _reduce_14(val, _values, result)
     retult = PsString.new('') 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 34)
  def _reduce_15(val, _values, result)
     retult = PsString.new('') 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 35)
  def _reduce_16(val, _values, result)
     result = PsString.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 36)
  def _reduce_17(val, _values, result)
     result = PsString.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 37)
  def _reduce_18(val, _values, result)
     enter_proc 
    result
  end
.,.,

module_eval(<<'.,.,', 'ps.y.rb', 37)
  def _reduce_19(val, _values, result)
     result = exit_proc 
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class PostScriptParser
    end   # module Parser
  end   # module PDF
