#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module PDF
  module Parser
    class ObjectParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     2,     3,     4,    15,    42,    16,    31,    17,    24,    18,
    23,    26,    43,    19,    33,    20,    21,    38,     5,     6,
     7,     2,     3,     4,    15,    25,    16,    27,    17,    39,
    18,    36,    35,    22,    19,    45,    20,    21,    18,     5,
     6,     7,     2,     3,     4,    15,    47,    16,    37,    17,
    40,    18,   nil,   nil,   nil,    19,   nil,    20,    21,   nil,
     5,     6,     7,     2,     3,     4,    15,   nil,    16,   nil,
    17,    28,    18,   nil,   nil,   nil,    19,   nil,    20,    21,
   nil,     5,     6,     7,     2,     3,     4,    15,   nil,    16,
   nil,    17,   nil,    18,   nil,   nil,   nil,    19,   nil,    20,
    21,   nil,     5,     6,     7,     2,     3,     4,    15,   nil,
    16,   nil,    17,   nil,    18,   nil,   nil,   nil,    19,   nil,
    20,    21,   nil,     5,     6,     7 ]

racc_action_check = [
     0,     0,     0,     0,    32,     0,    18,     0,    15,     0,
    10,    16,    32,     0,    18,     0,     0,    25,     0,     0,
     0,    33,    33,    33,    33,    15,    33,    16,    33,    27,
    33,    22,    21,     1,    33,    34,    33,    33,    35,    33,
    33,    33,    29,    29,    29,    29,    37,    29,    23,    29,
    29,    29,   nil,   nil,   nil,    29,   nil,    29,    29,   nil,
    29,    29,    29,    17,    17,    17,    17,   nil,    17,   nil,
    17,    17,    17,   nil,   nil,   nil,    17,   nil,    17,    17,
   nil,    17,    17,    17,    19,    19,    19,    19,   nil,    19,
   nil,    19,   nil,    19,   nil,   nil,   nil,    19,   nil,    19,
    19,   nil,    19,    19,    19,    43,    43,    43,    43,   nil,
    43,   nil,    43,   nil,    43,   nil,   nil,   nil,    43,   nil,
    43,    43,   nil,    43,    43,    43 ]

racc_action_pointer = [
    -2,    33,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    -3,   nil,   nil,   nil,   nil,     2,     3,    61,    -6,    82,
   nil,    13,    31,    23,   nil,    11,   nil,    21,   nil,    40,
   nil,   nil,    -8,    19,    19,    27,   nil,    32,   nil,   nil,
   nil,   nil,   nil,   103,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -30,   -30,    -1,    -2,    -3,    -4,    -5,    -6,    -7,    -8,
    -9,   -10,   -11,   -12,   -13,   -30,   -30,   -30,   -30,   -30,
   -28,   -30,   -30,   -30,   -14,   -30,   -15,   -30,   -18,   -30,
   -20,   -22,   -30,   -30,   -30,   -30,    49,   -30,   -16,   -17,
   -19,   -21,   -23,   -30,   -24,   -27,   -29,   -26,   -25 ]

racc_goto_table = [
     1,    29,    46,    32,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    30,   nil,    34,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,
   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    48 ]

racc_goto_check = [
     1,     9,     4,    10,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,     1,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,
   nil,   nil,   nil,     1,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,   nil,   nil,   -33,   nil,   nil,   nil,   nil,   -16,
   -15 ]

racc_goto_default = [
   nil,   nil,     8,     9,    10,    11,    12,    13,    14,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  2, 28, :_reduce_14,
  2, 28, :_reduce_15,
  3, 28, :_reduce_16,
  3, 28, :_reduce_17,
  2, 29, :_reduce_18,
  3, 29, :_reduce_19,
  1, 35, :_reduce_20,
  2, 35, :_reduce_21,
  2, 30, :_reduce_22,
  3, 30, :_reduce_23,
  2, 36, :_reduce_24,
  3, 36, :_reduce_25,
  4, 31, :_reduce_26,
  3, 32, :_reduce_27,
  1, 33, :_reduce_28,
  3, 34, :_reduce_29 ]

racc_reduce_n = 30

racc_shift_n = 49

racc_token_table = {
  false => 0,
  :error => 1,
  :PDF_TRUE => 2,
  :PDF_FALSE => 3,
  :PDF_NULL => 4,
  :PDF_STRL_L => 5,
  :PDF_STRL_R => 6,
  :PDF_STRH_L => 7,
  :PDF_STRH_R => 8,
  :PDF_ARRAY_L => 9,
  :PDF_ARRAY_R => 10,
  :PDF_DICT_L => 11,
  :PDF_DICT_R => 12,
  :PDF_STREAM => 13,
  :PDF_STREAM_END => 14,
  :PDF_OBJ => 15,
  :PDF_OBJ_END => 16,
  :PDF_REF => 17,
  :PDF_XREF_TABLE => 18,
  :PDF_TRAILER => 19,
  :PDF_NAME => 20,
  :PDF_NUM_INT => 21,
  :PDF_NUM_REAL => 22,
  :PDF_STR_ASCII => 23,
  :PDF_STR_HEX => 24,
  :STREAM_BYTES => 25 }

racc_nt_base = 26

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PDF_TRUE",
  "PDF_FALSE",
  "PDF_NULL",
  "PDF_STRL_L",
  "PDF_STRL_R",
  "PDF_STRH_L",
  "PDF_STRH_R",
  "PDF_ARRAY_L",
  "PDF_ARRAY_R",
  "PDF_DICT_L",
  "PDF_DICT_R",
  "PDF_STREAM",
  "PDF_STREAM_END",
  "PDF_OBJ",
  "PDF_OBJ_END",
  "PDF_REF",
  "PDF_XREF_TABLE",
  "PDF_TRAILER",
  "PDF_NAME",
  "PDF_NUM_INT",
  "PDF_NUM_REAL",
  "PDF_STR_ASCII",
  "PDF_STR_HEX",
  "STREAM_BYTES",
  "$start",
  "pdf_value",
  "pdf_str",
  "pdf_array",
  "pdf_dict",
  "pdf_stream",
  "pdf_obj",
  "pdf_ref",
  "pdf_trailer",
  "pdf_array_content",
  "pdf_dict_pairs" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'pdf.y.rb', 39)
  def _reduce_14(val, _values, result)
     retult = '' 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 40)
  def _reduce_15(val, _values, result)
     retult = '' 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 41)
  def _reduce_16(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 42)
  def _reduce_17(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 43)
  def _reduce_18(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 45)
  def _reduce_19(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 46)
  def _reduce_20(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 47)
  def _reduce_21(val, _values, result)
     result << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 49)
  def _reduce_22(val, _values, result)
     result = {}; @last_dict = result 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 51)
  def _reduce_23(val, _values, result)
     result = val[1]; @last_dict = result 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 52)
  def _reduce_24(val, _values, result)
     result = { val[0] => val[1] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 53)
  def _reduce_25(val, _values, result)
     result[val[1]] = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 55)
  def _reduce_26(val, _values, result)
     val[0][:_stream_] = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 57)
  def _reduce_27(val, _values, result)
     result = PdfObject.create(self, val[0][0], val[0][1], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 58)
  def _reduce_28(val, _values, result)
     result = Ref.new(self, val[0][0], val[0][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'pdf.y.rb', 62)
  def _reduce_29(val, _values, result)
     result = XRef.new(self, val[0], val[2]); @accepted = true 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class ObjectParser
    end   # module Parser
  end   # module PDF
